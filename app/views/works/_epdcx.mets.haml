-# METS Metadata Wrapper, which contains metadata
-# in EPrints DC XML Schema (epdcx) - As necessary for SWORD
-# See: http://www.ukoln.ac.uk/repositories/digirep/index/Eprints_Application_Profile

-#Require personalize.rb for Abstracts and Keywords
-require 'config/personalize.rb'

%mdWrap{ :LABEL=>"SWORD Metadata - EPrints DC XML schema", :MDTYPE=>"OTHER", :OTHERMDTYPE=>"EPDCX", :MIMETYPE=>"text/xml" }
  %xmlData
    %epdcx:descriptionSet{ 'xmlns:epdcx'=>"http://purl.org/eprint/epdcx/2006-11-16/", 'xmlns:xsi'=>"http://www.w3.org/2001/XMLSchema-instance", 'xsi:schemaLocation'=>"http://purl.org/eprint/epdcx/2006-11-16/ http://purl.org/eprint/epdcx/xsd/2006-11-16/epdcx.xsd" }
      
      -##### Description of item as a SCHOLARLY WORK #####
      %epdcx:description{ 'epdcx:resourceId'=>"sword-mets-epdcx-#{work.id}" }
        %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:valueURI'=>"http://purl.org/eprint/entityType/ScholarlyWork" }/
        -# TITLE (PRIMARY)
        %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/title" }
          %epdcx:valueString=encode_for_xml(work.title_primary)
        -# SUBJECTS (i.e. Keywords/Tags)  @TODO - Add Tags!!
        - if work.tags
          - work.tags.each do |kw|
            %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/subject" }
              %epdcx:valueString=encode_for_xml(kw.name) 
        -# ABSTRACT
        - if work.abstract and !work.abstract.empty? and $EXPORT_ABSTRACTS_AND_KEYWORDS
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/terms/abstract" }
            %epdcx:valueString=encode_for_xml(work.abstract)
        -# CREATOR (i.e. AUTHOR)
        - if work.name_strings.author 
          - work.name_strings.author.each do |ns|
            %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/creator" }
              %epdcx:valueString=encode_for_xml(ns.name)
        -# Reference to Expression of item (see below)
        %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/eprint/terms/isExpressedAs", 'epdcx:valueRef'=>"sword-mets-expr-#{work.id}" }/
      
      -##### Description of an EXPRESSION of the item #####
      %epdcx:description{ 'epdcx:resourceId'=>"sword-mets-expr-#{work.id}" }
        %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:valueURI'=>"http://purl.org/eprint/entityType/Expression" }/
        -# ADDITIONAL TITLES
        - if work.title_secondary and !work.title_secondary.empty?
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/title" }
            %epdcx:valueString=encode_for_xml(work.title_secondary)
        - if work.title_tertiary and !work.title_tertiary.empty?
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/title" }
            %epdcx:valueString=encode_for_xml(work.title_tertiary) 
        -# DESCRIPTION / NOTES
        - if work.notes and !work.notes.empty?
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/description" }
            %epdcx:valueString=encode_for_xml(work.notes)
        -# DATE AVAILABLE
        - if work.publication_date
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/terms/available" }
            %epdcx:valueString{'epdcx:sesURI'=>"http://purl.org/dc/terms/W3CDTF"}=work.publication_date.year
        -# LANGUAGE
        - if work.language
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/language", 'epdcx:vesURI'=>"http://purl.org/dc/terms/RFC3066" }
            %epdcx:valueString=encode_for_xml(work.language)    
        -# TYPE (Based on EPrints Type Vocab or DCMI Types)
          -# Check if EPrints Type
        - if work.type_uri and work.type_uri.include? "eprint/type"
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:vesURI'=>"http://purl.org/eprint/terms/Type", 'epdcx:valueURI'=>"#{work.type_uri}" }/ 
          -# Otherwise, assume it is a DCMI Type
        - elsif work.type_uri and !work.type_uri.empty?
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:vesURI'=>"http://purl.org/dc/dcmitype/", 'epdcx:valueURI'=>"#{work.type_uri}" }/ 
        -# COPYRIGHT HOLDER
        - if work.copyright_holder
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/eprint/terms/copyrightHolder" }
            %epdcx:valueString=encode_for_xml(work.copyright_holder)
        -# EDITORS
        - if work.name_strings.editor 
          - work.name_strings.editor.each do |ns|
            %epdcx:statement{ 'epdcx:propertyURI'=>"http://www.loc.gov/loc.terms/relators/EDT" }
              %epdcx:valueString=encode_for_xml(ns.name)
        
        -# BIBLIOGRAPHIC WORK
        %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/terms/bibliographicCitation" }
          -# Plain-text Citation in APA Citation Format
          %epdcx:valueString=encode_for_xml(work.to_s)
          -# OpenURL ContextObject
          = render :partial => 'works/epdcx_openurl', :locals => {:work => work}
          
        -# Reference to Manifestation of an Expression of item (see below)
        -# There is one Manifestation per FILE!
        - work.attachments.each do |att|
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/eprint/terms/isManifestedAs", 'epdcx:valueRef'=>"sword-mets-manifest-#{att.id}" }/
      
      -##### Description of a MANIFESTATION of an expression of the item #####
      - work.attachments.each do |att|
        -# Check for flag to ONLY display file names (not paths)
        - if filenames_only
          - filepath = att.filename
        - else
          - filepath = att.public_url(request)  
        %epdcx:description{ 'epdcx:resourceId'=>"sword-mets-manifest-#{att.id}" }
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:valueURI'=>"http://purl.org/eprint/entityType/Manifestation" }/
          -# CONTENT TYPE
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/format", 'epdcx:valueURI'=>"http://purl.org/dc/terms/IMT" }
            %epdcx:valueString=encode_for_xml(att.content_type)
          -# PUBLISHER
          - if work.publisher
            %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/publisher" }
              %epdcx:valueString=encode_for_xml(work.publisher.authority.name)
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/eprint/terms/isAvailableAs", 'epdcx:valueURI'=> filepath }/
        %epdcx:description{ 'epdcx:resourceURI'=>filepath }
          %epdcx:statement{ 'epdcx:propertyURI'=>"http://purl.org/dc/elements/1.1/type", 'epdcx:valueURI'=>"http://purl.org/eprint/entityType/Copy" }/
          
              
          
           