-# TODO this is complicated, can it be simplified?
-#Add Keywords field, with Auto-Complete
-# Also adds a list of existing Keywords

-# Initialize our list of keywords
-#  Default: use keywords assigned to @work.
-#  @keywords should only exist if there were errors in saving work
%td.duplicate
  -# Initialize our list of keywords
  = label_tag 'dupe_keyword_name_strings[]', "Keyword(s):"
  -# Build list of keywords
  - @dupe.keywords.each do |keyword|
    %br/
    = text_field_tag 'dupe_keyword_name_strings[]', self_or_name(keyword), {:class => 'text', :readonly => 'readonly'}
%td
  -# Initialize our list of keywords
  -#  Default: use keywords assigned to @work.
  -#  @keywords should only exist if there were errors in saving work
  - keywords = @work.keywords
  - keywords = @keywords if @keywords
  = label :keyword, "Keyword(s):"
  %br/
  = text_field_with_auto_complete :keyword, :name, {:class=>'text'}, {:method => :get, :skip_style => true, :frequency => 0.5}
  -# Ajax-enabled link to add new items to below list
  = link_to_remote "add", add_item_to_list_url, :condition => "$('keyword_name').value.length > 0",
      :with => "'list_type=keywords&item_value='+$F('keyword_name')+'&clear_field=keyword_name'"
  %ul.form_item_list#keywords_list
    -# Build list of existing keywords
    - keywords.each do |keyword|
      = render 'works/forms/fields/list_item', :list_type => 'keywords', :item_id => self_or_id(keyword), :item_value => self_or_name(keyword)
