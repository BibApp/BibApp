-# Add an Author field, with Auto-Complete.
-# Also adds a list of existing Authors

-# Initialize our list of authors
-#  Default: use authors assigned to @work.  
-#  @author_name_strings should only exist if there were errors in saving work
- authors = @work.name_strings.author if @work.name_strings.author
- authors = @author_name_strings if @author_name_strings

= label :author, :string, "Author(s):"
= text_field_with_auto_complete :author, :string, {:class=>'text',:value =>"#{@person.last_first if @person}"}, {:method => :get, :skip_style => true, :on_show => "function(element, update) {show_autocomplete_names(element, update);}", :on_hide => "function(element, update) {hide_autocomplete_names(element, update);}", :frequency => 0.5} 
-# Ajax-enabled link to add new items to below list
= link_to_remote "Add Author to List", :url => { :action => :add_item_to_list}, :condition => "$('author_string').value.length > 0", :with => "'list_type=author_name_strings&item_value='+$F('author_string')+'&item_class=movable&sortable=true&clear_field=author_string'"
-# If more than one author name, add a hint for how to reorder them
- if authors and authors.length>1
  %p#list_hint
    (Drag and drop names to reorder authors in list)
%ol.form_item_list#author_name_strings_list
  -# Build list of authors
  - if authors
    - authors.each do |author|
      - name = (author.kind_of?(String) ? author : author.name)
      - id = (author.kind_of?(String) ? author : author.id)
      = render :partial => 'works/forms/fields/list_item', :locals => {:list_type => 'author_name_strings', :item_id => id, :item_value => name, :item_class=>"movable"} 
-# Call Javascript action to make the above author list sortable, so users can change order of authors.
-# NOTE: params passed to sortable_element NEED to be the same as the page.sortable() call in 'item_list.js.rjs'
= sortable_element 'author_name_strings_list', :update => 'list_hint', :only => 'movable', :url => {:action => "reorder_list", :list_type =>'author_name_strings'}, :complete => visual_effect(:highlight, 'list_hint', :duration => 1.5)