-#
-# Render List of Duplicate Works with paging & sorting options
-#
- include_stylesheet('specific/admin/_dupes')
- include_javascript('specific/admin/_dupes')
#works.span-17.last
  - if @q
    %div
      %h3= t('admin.duplicates.results', :count => @q.total_hits)

    / Sort Form
    .span-15.append-1.last
      = form_tag "#works", :name => "dupes_form_show_rows", :method => :get do
        #sort-by
          %label=t('app.show') + ":"
          %select{:name => "rows"}
            - ["10", "20", "50", "100", "250", "500"].each do |opt|
              %option{:value => "#{opt}", :selected => (opt == @rows ? 'selected' : nil)}= opt.titleize

          = render 'admin/dupes_hidden_tags'

          = submit_tag t('app.go')

      = form_tag destroy_multiple_works_url, :name => "dupes_form", :method => :delete, :id => "dupes_form" do
        #bulk_links
          = check_box_tag "select_dupes", "yes", false, :id => 'global-checkbox'
          %strong=t('app.select_all')

          = submit_tag t('app.delete_selected')
          = render 'admin/dupes_hidden_tags'

        %div= will_paginate WillPaginate::Collection.new((params[:page]||1), @rows, @q.total_hits)

        %ol#work-list.span-17.clear-both.no-padding-or-margin
          - @works.each do |work|
            = render "shared/work", :work => work, :allow_select => true, :show_status => true,
              :show_dupes => true, :links_array => [:edit]

        %div= will_paginate WillPaginate::Collection.new((params[:page]||1), @rows, @q.total_hits)