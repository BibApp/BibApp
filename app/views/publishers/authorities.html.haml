
- if logged_in? && current_user.has_role?("editor", @name_string)
  - content_for :admin_bar do
    / #### Admin Actions ###
    %div.span-24#admin-actions
      %ul#edit-actions
        %li=link_to "Add a Publisher", new_publisher_path

%div{:class => "column span-24"}
  %div{:class => "column span-22 prepend-1"}
    %h2="Admin Publisher Authorities"

    %div#authority_form
      %p="To set publisher authorities, add publication records to the box below, select one record as the authority, and click the <em>Set Authority</em> button."
      =render :partial => "authority_form", :object => @pas, :locals => {:page => @page}

    = render :partial => "shared/alpha_pagination"
    
    %table#publishers
      %thead
        %tr
          %td Select
          %td Title
          %td Source
          %td Publications
      %tbody
        -@current_objects.each do |publisher|
          %tr.publisher{:id => "publisher_#{publisher.id}", :class => cycle("odd", "even")}
            -#%td=link_to_remote 'add', {:url => {:action => :add_to_box, :new_pa => publisher.id }}, {:href => url_for(:action => :add_to_box, :new_pa => publisher.id, :page => @page), :class => "add"}
            %td=link_to 'add', url_for(:action => :add_to_box, :new_pa => publisher.id, :page => @page)
            %td=link_to "#{publisher.name}", publisher_path(publisher)
            %td=publisher.publisher_source.name
            %td=publisher.publications.length

    %br/
    %br/
    = render :partial => "shared/alpha_pagination"
            
%script{:type => 'text/javascript'}
  :plain
    
    Event.addBehavior({
      'a.add:click': function() {
        var id = this.up('tr').id;
      
        if (this.innerHTML == "remove") {
          $(id).removeClassName("selected");
          this.update("select");
        } else {
          $(id).addClassName("selected");
          this.update("remove");
        }
      },
      'a.update:click': function() {
        var auth_id = this.up('tr').id;
        
        if (this.innerHTML == "make authority") {
          $(auth_id).addClassName("authority");
          this.update("Authority!");
        } else {
          $(auth_id).removeClassName("authority");
          this.update("make authority");
        }
      },
        
      '#authority:submit': function() {
        pub_ids = new Array();
        auth_id = new Array();
        
        auth_id = $$('tr.authority')[0].id.split('_')[1];
        
        $$('tr.selected').each(function(value) {
          pub_ids = pub_ids.concat(value.id.split('_')[1]);
        })
        
        $('pub_ids').value = pub_ids;
        $('auth_id').value = auth_id;
        
      }
    });
    
    // $$('tr.selected') will return an Array of "selected" rows