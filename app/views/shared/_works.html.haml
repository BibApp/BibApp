-#
-# Render List of Works with paging & sorting options
-#

-# Initialize optional input variables
- allow_select ||= false
- show_status ||= false
- show_dupes ||= false
- links_array ||= [:find_it, :cart]  #default to just 'find_it' and 'cart' links

%div#works{:class => "span-17 last"}
  - if @q
    %div{:class => "span-4"}
      %h3="Results (#{@q.total_hits})"

    / Sort Form
    %div{:class => "span-11 append-1 last"}
      - form_tag "#works", :method => :get do
        #sort-by
          %label Show:
          %select{:name => "rows"}
            - ["10", "20", "50", "100", "250", "500"].each do |opt|
              - if opt == @rows
                %option{:selected => "selected", :value => "#{opt}"}= opt.titleize
              - else
                %option{:value => "#{opt}"}= opt.titleize
          %label Sort by:
          %select{:name => "sort"}
            - ["", "Year", "Score"].each do |opt|
              - if opt.downcase == @sort
                %option{:selected => "selected", :value => "#{opt.downcase}"}= opt.titleize
              - else
                %option{:value => "#{opt.downcase}"}= opt
          %label Send to:
          %select{:name => "export"}
            - ["", "APA", "Chicago", "Harvard", "IEEE", "MLA", "Nature", "NLM"].each do |opt|
              %option{:value => "#{opt.downcase}"}=opt

          = hidden_field_tag "q", @query

          - for filter in @filter
            = hidden_field_tag "fq[]", filter
            
          = hidden_field_tag "view", "all"
          - @page = 1 if @page == 0
          = hidden_field_tag "page", @page              

          = submit_tag 'Go'

    %div.span-17{:style => "margin-bottom:1em;"}= will_paginate WillPaginate::Collection.new((params[:page]||1), @rows, @q.total_hits)

    %ol.span-17{:style => "padding:0; margin:0; clear:both;"}
      - @works.each do |work|
        = render :partial => "shared/work", :locals => {:work => work, :allow_select => allow_select, :show_status => show_status, :show_dupes => show_dupes, :links_array => links_array}
        
    %div{:class => "span-17"}= will_paginate WillPaginate::Collection.new((params[:page]||1), @rows, @q.total_hits)