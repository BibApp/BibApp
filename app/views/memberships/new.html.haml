/ === Memberships === New ===
/ Main
- @title = "#{@person.display_name}: Group Memberships"
- if logged_in? && current_user.has_role?("admin", @name_string)
  - content_for :admin_bar do
    / #### Admin Actions ###
    %div.span-24#admin-actions
      %ul#edit-actions
        %li=link_to "Delete this person", {:id => @person.id, :controller => "people", :action => "destroy"}, :method => :delete, :confirm => 'Permanently delete this person? This cannot be undone.'
        %li= link_to "Add a new person", new_person_path

%div{:class => "span-24"}
  %div{:class => "span-22 prepend-1"}
    %h2="#{link_to @person.display_name, person_path(@person)}: Group Memberships"

    = render :partial => "shared/local_nav", :locals => {:object => "person", :state => "edit"}

    %div{:class => "span-4 prepend-1"}
      #picture{:class => "span-3"}
        %p= render :partial => "shared/person_image", :locals => {:o => @person}

      %h3="Groups (#{@person.groups.size})"
      %ol.groups_alphabetical
        - @person.groups.each do |g|
          %li=link_to "#{g.name}", group_path(g)

    %fieldset
      %legend="Group Memberships"
      %div{:class => "column span-16 last"}
        - if @status == "non_member"
          /Search Form
          %div{:class => "span-8 append-1 last", :style => "float:right;"}
            - form_tag :action => "search_groups", :method => :get, :class => "memberships_search_form" do

              %div#search-box
                = text_field_tag(:q, value = nil, options = {:size => 21})
                = hidden_field_tag "person_id", @person.id
                = hidden_field_tag "status", @status
                = submit_tag 'Search Groups'

        %ul.actions
          %li=link_to_unless((@status.downcase == "member"), "Memberships (#{@person.groups.size})", {:controller => "memberships", :action => "new", :params => {"person_id", @person.id, "status", "member"}})
          |
          %li=link_to_unless((!defined?(@query) && @status.downcase == "non_member"), "All Groups (#{Group.find(:all).size})", {:controller => "memberships", :action => "new", :params => {"person_id", @person.id, "status", "non_member"}})


        - if @status == "non_member"
          / Sort Form
          %div{:class => "span-15 append-1 last"}
            - if defined?(@query)
              %h3
                Searching for:
                = @query
                = link_to image_tag('/images/remove_facet.gif'), new_person_membership_path(:person_id=>@person.id,:status=>"non_member")
            - if @groups.length < 1
              %p No groups found
            - else
              - form_tag "javascript:void(0)", :method => :get, :name => "memberships_form" do
                %div
                  #bulk_links
                    /= check_box_tag "select_contributorships", "yes", false, :onclick=>"select_all(this, 'contrib_id[]');"
                    =button_to_function "Join selected groups", "submit_memberships_form(document.memberships_form, 'group_id[]', '#{create_multiple_memberships_path}')"

                    = hidden_field_tag "person_id", @person.id
                    = hidden_field_tag "status", @status
                    -#Authenticity token is necessary so that Rails doesn't think this request is fraudulent (when someone clicks "delete selected" link)
                    = hidden_field_tag "authenticity_token", form_authenticity_token

                %div{:class => "span-15 append-1 last"}
                  = render :partial => "group_list"

                  %script{:type => "text/javascript"}
                    :plain
                      <!--
                      function toggle_folder(fid){
                        $('children_of_' + fid).toggle();
                        if ($('toggle_switch_' + fid).innerHTML == '+') {
                          $('toggle_switch_' + fid).innerHTML = '&ndash; ';
                        } else {
                          $('toggle_switch_' + fid).innerHTML = '+';
                        }
                      }
                      function check_parent(pid){
                        if (pid != null) {
                          if ($('group_id-' + pid) == null) return;
                          pnode = $('group_id-' + pid).childElements()[1];
                          if (!pnode.disabled) {
                            pnode.checked = true;
                            pnode.onclick();
                          }
                        }
                      }
                      // -->

        - if @status == "member"
          %div{:class => "span-15 append-1 last"}
            #edit_membership_active
            %ol#current
              = render :partial => "group", :collection => @person.groups(true)

      =sortable_element 'current', :url => {:action => "sort", :person_id => @person.id }