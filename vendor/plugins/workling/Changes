Version 0.2.4, 08.06.08
- accept both async_ and asynch_ as prefixes for workling method invocation. thank you francois beausoleil!
- added memcached configuration options to starling.yml. see example yml for details. thank you larry diehl!
- re-raise exceptions if there is a problem adding an item to the starling queue. thank you digitalronin!
- added status script for starling client. thank you andrew carter!
- applied patches from dave dupre: http://davedupre.com/2008/03/29/ruby-background-tasks-with-starling-part-2/
  - added threading to starling poller. One polling thread can now be set to run per queue. 
  - default routing no longer producing queues like a:b:c, this was conflicting with MemCacheClient#stat
  - added handling for memcache exceptions
  - keep the database connection alive

Version 0.2.2, 15.02.08, rev 31
- added blaine cook's suggestion: worklings can now (also) be invoked like this: YourWorkling.asynch_your_method(options)
- added similar for remote store, which can now be called like this: Workling::Return::Store.set(:key, "value")

Version 0.2.1, 14.02.08 rev. 24
- added WorklingError classes.
- all runners now suppresses workling exceptions. This brings the local behaviour in line with the remote runners.

Version 0.2, 13.02.08 rev. 21
- progress bars or returning results now possible with return stores. use these to communicate back from your workling.
- memory store for testing and starling store added. 
- now generates uids for workling jobs. these are returned by the runner.
- extracted Workling::Starling::Client
- clearer file structure for workling

Version 0.1, 06.02.08
- initial release
- see http://playtype.net/past/2008/2/6/starling_and_asynchrous_tasks_in_ruby_on_rails/ for details.